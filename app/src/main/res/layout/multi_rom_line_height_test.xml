<?xml version="1.0" encoding="utf-8"?><!-- Copyright (C) 2011 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:orientation="vertical">

    <com.github.hailouwang.demosforapi.compatible.lineheight.ETextView
        android:id="@+id/line_height_text_view"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="TextView的自带行间距是由于绘制的汉字没有占满descent和ascent的空间引起的，且该行间距在不同的字号以及分辨率下表现不一。若能够去除掉这部分行间距，就能达到适配目的。怎么去除呢？我们再看一下系统TextView和视觉对一行文字行高的定义：
TextView：行高 = descent - ascent (descent值为正，ascent值为负)
视觉：行高 = 字体大小 (比如16dp的文字，行高=48px)
只要能够修改TextView的默认行高，让其和视觉定义的行高保持统一，就能去除掉这部分行间距。怎么修改TextView的默认行高呢？其实TextView在设计的时候，提供了一个接口去修改TextView的行高。回到上面对TextView的源码分析，第20行-第39行，将字体的度量信息存入fm变量中，然后通过LineHeightSpan接口将fm变量传递出去，我们借助这个LineHeightSpan就可以修改TextView的行高。" />

</LinearLayout>
