apply plugin: 'com.android.application'

apply plugin: 'maven'

//制作补丁时将这个打开，auto-patch-plugin紧跟着com.android.application
//apply plugin: 'auto-patch-plugin'
//apply plugin: 'robust'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

// 了解 GradlePlugin 开发过程，这里要打开
//apply plugin: 'gradleplugindemo'

android {
    compileSdkVersion build_versions.compileSdkVersion
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        applicationId "com.github.hailouwang.demosforapi"

        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk

        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++14"
            }
        }

        flavorDimensions "default"
        productFlavors {
//            all64 { minSdkVersion build_versions.min_sdk }
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME    : project.getName(), AROUTER_GENERATE_DOC: "enable",
                             "room.schemaLocation"  : "$projectDir/schemas".toString(),
                             "room.incremental"     : "true",
                             "room.expandProjection": "true"]
            }
        }
    }

    buildTypes {
        debug {
            zipAlignEnabled false
            minifyEnabled false
            shrinkResources false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            zipAlignEnabled false
            minifyEnabled false
            shrinkResources false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/hellojni/CMakeLists.txt"
            version "3.10.2"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation deps.kotlin.stdlib

    implementation deps.androidx.annotations
    implementation deps.androidx.legacy_support_v4
    implementation deps.androidx.design
    implementation deps.androidx.recyclerview
    implementation deps.androidx.gridlayout
    implementation deps.androidx.cardview
    implementation deps.androidx.core_ktx
    implementation deps.androidx.app_compat
    implementation deps.androidx.core_utils
    implementation deps.androidx.constraintlayout
    implementation deps.androidx.preference
    implementation deps.androidx.viewpager2

//    implementation 'android.arch.lifecycle:extensions:1.1.1'
    implementation deps.lifecycle.runtime
    implementation deps.lifecycle.extensions
    implementation deps.lifecycle.java8
    annotationProcessor deps.lifecycle.compiler

    testImplementation deps.junit
    implementation deps.androidx.test_runner
    implementation deps.androidx.espresso_core

    implementation deps.androidx.legacy_support_v4

    implementation deps.alibaba_vlayout

    implementation deps.gson

    implementation deps.retrofit

    implementation deps.okhttp

    implementation deps.picasso

    implementation deps.rxjava2
    implementation deps.rx_android

    implementation deps.fresco

    implementation deps.firebase_ads
    implementation project(path: ':messageview')
    implementation project(path: ':apiDemos')
    implementation project(path: ':volley')
    implementation project(path: ':dotspageindicator')

    implementation deps.leancloud_storage
    implementation deps.fastjson
    implementation deps.glide

    implementation deps.shimmer_recycler_view
    implementation deps.shimmer_layout

//    implementation deps.hailouwang.fragmentrouter
    implementation project(path: ':fragmentrouter')

    implementation project(path: ':flutter')
    implementation project(path: ':routemoduletest')
//    implementation project(path: ':module-java')
    implementation project(path: ':module-kotlin')
    implementation project(path: ':module-kotlin')

    implementation deps.alibabaarouter
    annotationProcessor deps.alibabaarouter_compiler
//    annotationProcessor project(path: ':arouter-compiler')

    implementation 'com.meituan.robust:robust:0.4.99'

//    implementation deps.mmkv_static
    implementation deps.mmkv

    // room start
    implementation deps.room.runtime
    annotationProcessor deps.room.compiler // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation deps.room.ktx

    // optional - RxJava support for Room
    implementation deps.room.rxjava2

    // Test helpers
    testImplementation deps.room.testing
    // room end

//    implementation 'org.checkerframework:checker:2.1.10'
    implementation deps.square.poet
    implementation deps.square.otto
    implementation project(path: ':Poet')

    // rxlifecycle start
    implementation 'com.trello.rxlifecycle3:rxlifecycle:3.1.0'

// If you want to bind to Android-specific lifecycles
    implementation 'com.trello.rxlifecycle3:rxlifecycle-android:3.1.0'

// If you want pre-written Activities and Fragments you can subclass as providers
    implementation 'com.trello.rxlifecycle3:rxlifecycle-components:3.1.0'

// If you want pre-written support preference Fragments you can subclass as providers
    implementation 'com.trello.rxlifecycle3:rxlifecycle-components-preference:3.1.0'

// If you want to use Android Lifecycle for providers
    implementation 'com.trello.rxlifecycle3:rxlifecycle-android-lifecycle:3.1.0'

// If you want to use Kotlin syntax
    implementation 'com.trello.rxlifecycle3:rxlifecycle-kotlin:3.1.0'

// If you want to use Kotlin syntax with Android Lifecycle
    implementation 'com.trello.rxlifecycle3:rxlifecycle-android-lifecycle-kotlin:3.1.0'
    // rxlifecycle end

    // autodisponse start
    implementation 'com.uber.autodispose:autodispose:0.6.1'
    implementation 'com.uber.autodispose:autodispose-android-archcomponents:0.6.1'
    // autodisponse end

//    implementation deps.weex.devtools
//    implementation deps.weex.sdk

//    implementation deps.ijkplayer
//    implementation deps.ijkplayer_v7a
//    implementation project(path: ':ijkplayer-exo')
//    implementation project(path: ':ijkplayer-java')

//    all64Implementation project(':ijkplayer-arm64')

    implementation project(':dkplayer-java')
    implementation project(':dkplayer-ui')
    implementation project(path: ':dkplayer-players:ijk')
    implementation project(path: ':dkplayer-players:exo')
    //缓存
    implementation project(':dkplayer-videocache')
    implementation project(':dkplayer-sample')

    // 弹幕
    implementation deps.damakuFlame
    implementation deps.ndkbitmap
    implementation project(path: ':fragmentbackhandler')

    implementation deps.butterknife.butterknife
    annotationProcessor deps.butterknife.butterknife_compiler

    implementation project(':statemachine')
}